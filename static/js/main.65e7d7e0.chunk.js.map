{"version":3,"sources":["GoodsList.tsx","api/goods.ts","constants/Goods/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","_ref","goods","_jsx","children","map","good","style","color","name","id","getAll","fetch","then","response","json","GOOD","App","_useState","useState","_useState2","_slicedToArray","setGoods","_jsxs","className","type","onClick","quantity","sort","a","b","localeCompare","slice","filter","ReactDOM","render","document","getElementById"],"mappings":"wMAOaA,EAA6B,SAAHC,GAAA,IAAMC,EAAKD,EAALC,MAAK,OAChDC,cAAA,MAAAC,SACGF,EAAMG,KAAI,SAAAC,GAAI,OACbH,cAAA,MAEEI,MAAO,CAAEC,MAAOF,EAAKE,OACrB,UAAQ,OAAMJ,SAEbE,EAAKG,MAJDH,EAAKI,GAKP,KAEJ,ECbA,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,GACrC,CAEO,ICVMC,EACJ,EADIA,EAEJ,MCKIC,EAAgB,WAC3B,IAAAC,EAA0BC,mBAAiB,IAAGC,EAAAC,YAAAH,EAAA,GAAvChB,EAAKkB,EAAA,GAAEE,EAAQF,EAAA,GAiBtB,OACEG,eAAA,OAAKC,UAAU,MAAKpB,SAAA,CAClBD,cAAA,MAAAC,SAAI,0BAEJD,cAAA,UACEsB,KAAK,SACL,UAAQ,aACRC,QAtBgB,WACpBf,IACGE,MAAK,SAAAP,GAAI,OAAIgB,EAAShB,EAAK,GAChC,EAmB6BF,SACxB,mBAIDD,cAAA,UACEsB,KAAK,SACL,UAAQ,oBACRC,QAzBkB,WFLG,IAACC,KEMZX,EFLTL,IACJE,MAAK,SAAAX,GAAK,OAAIA,EACZ0B,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEpB,KAAKsB,cAAcD,EAAErB,KAAK,IAAEuB,MAAM,EAAGL,EAAS,KEI/Dd,MAAK,SAAAP,GAAI,OAAIgB,EAAShB,EAAK,GAChC,EAsB+BF,SAC1B,uBAIDD,cAAA,UACEsB,KAAK,SACL,UAAQ,aACRC,QA5BgB,WFJE,IAAClB,KEKZQ,EFJNL,IACJE,MAAK,SAAAX,GAAK,OAAIA,EACZ+B,QAAO,SAAA3B,GAAI,OAAIA,EAAKE,QAAUA,CAAK,GAAC,KEGpCK,MAAK,SAAAP,GAAI,OAAIgB,EAAShB,EAAK,GAChC,EAyB6BF,SACxB,mBAIDD,cAACH,EAAS,CAACE,MAAOA,MAGxB,ECrDAgC,IAASC,OACPhC,cAACc,EAAG,IACJmB,SAASC,eAAe,Q","file":"static/js/main.65e7d7e0.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        style={{ color: good.color }}\n        data-cy=\"good\"\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const getByQuantity = (quantity: number) => {\n  return getAll()\n    .then(goods => goods\n      .sort((a, b) => a.name.localeCompare(b.name)).slice(0, quantity));\n};\n\nexport const getByColor = (color: string) => {\n  return getAll()\n    .then(goods => goods\n      .filter(good => good.color === color));\n};\n","export const GOOD = {\n  LIMIT: 5,\n  COLOR: 'red',\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { getAll, getByQuantity, getByColor } from './api/goods';\nimport { Good } from './types/Good';\nimport { GOOD } from './constants/Goods/goods';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n\n  const handleLoadAll = () => {\n    getAll()\n      .then(good => setGoods(good));\n  };\n\n  const handleFirstFive = () => {\n    getByQuantity(GOOD.LIMIT)\n      .then(good => setGoods(good));\n  };\n\n  const handleRedOnly = () => {\n    getByColor(GOOD.COLOR)\n      .then(good => setGoods(good));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={handleLoadAll}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={handleFirstFive}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={handleRedOnly}\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={goods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}